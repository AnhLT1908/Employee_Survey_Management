@model HRTestWeb.ViewModels.Account.LoginViewModel
@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />
}

<div class="auth-wrap d-flex align-items-center justify-content-center">
    <div class="auth-card card shadow-sm">
        <div class="card-body p-4 p-md-5">
            <div class="text-center mb-4">
                <div class="brand-circle mx-auto mb-3">HR</div>
                <h5 class="mb-1 fw-semibold">Đăng nhập</h5>
                <p class="text-muted small mb-0">Truy cập hệ thống đánh giá & khảo sát</p>
            </div>

            <div id="apiError" class="alert alert-danger d-none mb-3"></div>

            <form id="loginForm" asp-action="Login" method="post" novalidate>
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="ReturnUrl" />

                <div asp-validation-summary="ModelOnly" class="text-danger mb-3 small"></div>

                <div class="form-floating mb-3">
                    <input asp-for="Email" class="form-control" placeholder="name@company.com" autocomplete="username" />
                    <label asp-for="Email">Email hoặc Username</label>
                    <span asp-validation-for="Email" class="text-danger small"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Password" class="form-control" placeholder="••••••" autocomplete="current-password" />
                    <label asp-for="Password">Mật khẩu</label>
                    <span asp-validation-for="Password" class="text-danger small"></span>
                </div>

                <div class="d-flex align-items-center justify-content-between mb-3">
                    <div class="form-check">
                        <input asp-for="RememberMe" class="form-check-input" />
                        <label asp-for="RememberMe" class="form-check-label"></label>
                    </div>
                    <a asp-action="ForgotPassword" class="link-secondary small text-decoration-none">Quên mật khẩu?</a>
                </div>

                <button type="submit" class="btn btn-primary w-100 py-2">Đăng nhập</button>
            </form>

            <div class="mt-4 pt-3 border-top sso-area">
                <partial name="_ExternalLoginButtons" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
          const form = document.getElementById('loginForm');
          const errorBox = document.getElementById('apiError');
          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            errorBox.classList.add('d-none');
            const data = {
              Email: form.querySelector('[name="Email"]').value?.trim(),
              Password: form.querySelector('[name="Password"]').value,
              RememberMe: form.querySelector('[name="RememberMe"]').checked,
              ReturnUrl: form.querySelector('[name="ReturnUrl"]').value
            };
            try {
              const res = await fetch('/api/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin',
                body: JSON.stringify(data)
              });
              if (res.ok) {
                const payload = await res.json();
                window.location.href = payload.redirectUrl || '/';
              } else {
                const err = await res.json().catch(() => ({ message: 'Đăng nhập thất bại' }));
                errorBox.textContent = err.message || 'Đăng nhập thất bại';
                errorBox.classList.remove('d-none');
              }
            } catch {
              errorBox.textContent = 'Không thể kết nối máy chủ.';
              errorBox.classList.remove('d-none');
            }
          }, { passive: false });
        })();
    </script>
}
