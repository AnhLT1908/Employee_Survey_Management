@model HRTestWeb.ViewModels.Account.LoginViewModel
@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <div class="card shadow-sm mt-5">
                <div class="card-body">
                    <h4 class="text-center mb-3">Đăng nhập</h4>

                    <div id="apiError" class="alert alert-danger d-none"></div>

                    <form id="loginForm" asp-action="Login" method="post" novalidate>
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="ReturnUrl" />

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" autocomplete="username" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control" autocomplete="current-password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="mb-3 form-check">
                            <input asp-for="RememberMe" class="form-check-input" />
                            <label asp-for="RememberMe" class="form-check-label"></label>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
                    </form>

                    <div class="mt-3">
                        <partial name="_ExternalLoginButtons" />  @* Chỉ render 1 lần ở đây *@
                    </div>
                </div>
            </div>

            <p class="text-muted small text-center mt-3">
                Gợi ý: admin@hrtest.local / Admin@123
            </p>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Intercept form gọi API JSON (có fallback post MVC nếu bạn bỏ đoạn này)
        (function () {
          const form = document.getElementById('loginForm');
          const errorBox = document.getElementById('apiError');
          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            errorBox.classList.add('d-none');
            const data = {
              Email: form.querySelector('[name="Email"]').value,
              Password: form.querySelector('[name="Password"]').value,
              RememberMe: form.querySelector('[name="RememberMe"]').checked,
              ReturnUrl: form.querySelector('[name="ReturnUrl"]').value
            };
            try {
              const res = await fetch('/api/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin',
                body: JSON.stringify(data)
              });
              if (res.ok) {
                const payload = await res.json();
                window.location.href = payload.redirectUrl || '/';
              } else {
                const err = await res.json().catch(() => ({ message: 'Đăng nhập thất bại' }));
                errorBox.textContent = err.message || 'Đăng nhập thất bại';
                errorBox.classList.remove('d-none');
              }
            } catch (ex) {
              errorBox.textContent = 'Không thể kết nối máy chủ.';
              errorBox.classList.remove('d-none');
            }
          }, { passive: false });
        })();
    </script>
}
